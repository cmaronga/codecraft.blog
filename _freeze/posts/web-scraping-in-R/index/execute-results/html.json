{
  "hash": "adcc3510216b72972c14b9e72fbd51b7",
  "result": {
    "markdown": "---\ntitle: \"Web scraping using R\"\n# author: \"Christopher Maronga\"\ndate: \"2023-10-31\"\ncategories: [Data mining, Data wrangling, tidyverse]\nimage: \"web-scraping.jpeg\"\n#draft: true\n---\n\n\nEfficient, flexible and powerful!\n\n# Introduction\n\nWeb scraping is concept that most probably you have heard about. This is the art of [harvesting](https://en.wikipedia.org/wiki/Web_scraping) publicly available data from a website for use in your analysis or reporting. Web scraping can be as simple as copying the contents of a website and pasting them on an excel sheet, but thatâ€™s not what we are going to do today. Most website pages are built using [HTML](https://en.wikipedia.org/wiki/HTML) and this allows us to use tools such as R to dynamically extract the data.\n\nIn this tutorial, I am going walk you through how you can harvest data from websites using R programming language. You can do this by coding the logic and instructions manually or use the package [`{rvest}`](https://rvest.tidyverse.org/) to easily extract the contents of a website. We would demonstrate the examples using the below two websites.\n\n- TheGlobalEconomy.com, [Exchange rate to USD by country](https://www.theglobaleconomy.com/rankings/Dollar_exchange_rate/)\n- [CRAN package](https://cran.r-project.org/web/packages/available_packages_by_date.html) website and [package download metrics](https://www.datasciencemeta.com/rpackages) website\n\n\nFirst, let's load the packages/tools of trade for the exercise.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# loading packages\npacman::p_load(\n  rvest,        # functions for webscraping\n  ggthemes,     # extend themes for ggplot2\n  lubridate,    # handle dates\n  here,         # manage file paths\n  flextable,    # quick tables\n  tidyverse     # data wranglinga and visualization\n)\n\n# set theme for ggplot2\ntheme_set(\n  theme_hc(base_size = 18) +                  # base size\n    theme(\n      legend.position = \"none\",              # No legend, unless specified in the plot\n      legend.title = element_blank(),         # No title on the legend\n      axis.title.y = element_text(angle = 90) # spin y title 90 degrees\n    )\n)\n```\n:::\n\n\n# using `rvest`\n\nThis is the simplest and easiest approach of then all. [rvest helps you scrape (or harvest)](https://rvest.tidyverse.org/) data from web pages and it's designed to work with the pipe chain style of coding.\n\nThree simples steps using this package:-\n\n- Use `read_tml` function to convert the the url into an `xml document`\n- pass the `xlm document` to the function `html_table` to convert it into a list contain table(s) from the url source site.\n- Now that you have tabular data, you can proceed with various data wrangling approaches to clean it up for use.\n\n## Dollar exchange data\n\nI came across this website [Exchange rate to USD by country](https://www.theglobaleconomy.com/rankings/Dollar_exchange_rate/) while I was working on aggregating output from an[ economic micro-simulation model](https://asbmr.onlinelibrary.wiley.com/doi/full/10.1002/jbmr.4775?af=R) estimating benefits and budget impact of setting up fracture liaison services. Part of my reporting costs associated with the FLS, reported in local currency for about 10 different countries, but for harmonized reporting and international consumption, I need to convert the local currencies to US Dollars, hence I needed a source that I could cite and is updated regularly.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get url from website\nexchange_rate_url <- \"https://www.theglobaleconomy.com/rankings/Dollar_exchange_rate/\"\n\n# read HTML from website\nexchange_rate_webpage <- read_html(exchange_rate_url)       # read html site\n\n\n# create a datframe containing the exchange rates for use\ncurrency_rates <- exchange_rate_webpage %>%\n  html_table() %>%                                          # output a list contain the exchange rate table from website\n  as.data.frame() %>%                                       # transform into a tibble\n  # rename columns appropriately\n  rename(\n    Country        = Countries,\n    LatestData     = \"Reference.date\",\n    LatesValue     = \"Latest.available.value\",\n    Change3months  = \"Change.three.months\",\n    Change12months = \"Change.twelve.months\"\n  ) %>%\n  mutate(across(LatesValue, as.numeric),                  # convert to numeric column containing exchange rate\n         \n         # On the date column; remove white space and replace \"/\" with \"-\"\n         LatestData = str_squish(\n           str_replace_all(\n             string = LatestData,\n             pattern = \"/\",\n             replacement = \"-\"\n           )\n         )) %>% \n  # transform `LatestData` into a proper date column\n  mutate(\n    LatestData = my(LatestData),                       # proper date format\n    LatestData = format(LatestData, \"%Y-%m\")           # YYYY-mm\n  )\n```\n:::\n\n\nThe first 15 rows of the harvested data are show below\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurrency_rates %>% \n  head(15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Country LatesValue LatestData Change3months Change12months\n1          Afghanistan    75.4778    2023-10       -13.35%        -13.07%\n2              Albania   100.1403    2023-10         6.77%        -15.96%\n3              Algeria   137.2571    2023-10         1.59%         -2.22%\n4              Andorra     0.9466    2023-10         4.67%         -6.90%\n5               Angola   828.1470    2023-10         0.28%         83.55%\n6  Antigua and Barbuda     2.7026    2023-10         0.00%          0.00%\n7            Argentina   349.9246    2023-10        31.68%        130.05%\n8              Armenia   402.5164    2023-10         4.31%          0.08%\n9                Aruba     1.8011    2023-10        -0.03%          0.01%\n10           Australia     1.5759    2023-10         6.05%          0.25%\n11             Austria     0.9466    2023-10         4.67%         -6.90%\n12          Azerbaijan     1.7000    2023-10         0.00%          0.00%\n13             Bahamas     0.9995    2023-10         0.10%         -0.01%\n14             Bahrain     0.3767    2023-10         0.05%         -0.13%\n15          Bangladesh   110.1738    2023-10         1.65%          7.81%\n```\n:::\n:::\n\n\n\nYou can now export the harvested data for later use downstream or in your modelling framework like I did. You see, easy and straight forward, right?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Export the data\n\nrio::export(currency_rates, here(\"datasets\", \"dollar_exchange_rates.rds\"))\n```\n:::\n\n\n\n## Available CRAN packages\n\nIn this section, we are going to harvest data from two websites:-\n\n- List of available [CRAN packages](https://cran.r-project.org/web/packages/available_packages_by_date.html) by data of publication\n- Tracked website of [CRAN packages by number of downloads](https://www.datasciencemeta.com/rpackages)\n- Additionally, to get some metrics to combine with data from the above 2 sites, we I use `available.packages` function for all cran packages in this [mirror](https://cran.r-project.org/)\n\n\n\n### CRAN packages by publication date\n\nI will use the 3 simple steps already covered earlier, employing `rvest` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Specifying the url\nurl <- 'https://cran.r-project.org/web/packages/available_packages_by_date.html'\n\n\n# create a dataframe using `rvest` functions\nr_pkgs_by_date <- read_html(url) %>% \n  html_table() %>% \n  as.data.frame() %>% \n  mutate(\n    Date = ymd(Date)\n  ) %>% \n  rename(pkg_name = Package, date_published = Date)\n\n# view top n rows\nr_pkgs_by_date %>% \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   date_published      pkg_name\n1      2023-11-03           abn\n2      2023-11-03          afpt\n3      2023-11-03     betaDelta\n4      2023-11-03          bild\n5      2023-11-03     chisquare\n6      2023-11-03           DPQ\n7      2023-11-03 DTRKernSmooth\n8      2023-11-03       fBasics\n9      2023-11-03     FieldSimR\n10     2023-11-03     GOxploreR\n                                                                                                       Title\n1                                                Modelling Multivariate Data with Additive Bayesian Networks\n2                                                           Tools for Modelling of Animal Flight Performance\n3                                              Confidence Intervals for Standardized Regression Coefficients\n4                                                                     A Package for BInary Longitudinal Data\n5  Chi-Square and G-Square Test of Independence, Residual Analysis,\\nand Measures of Categorical Association\n6                                                        Density, Probability, Quantile ('DPQ') Computations\n7                          Estimate and Make Inference About Optimal Treatment Regimes via\\nSmoothed Methods\n8                                                                    Rmetrics - Markets and Basic Statistics\n9                                   Simulation of Plot Errors and Phenotypes in Plant Breeding Field\\nTrials\n10                                           Structural Exploration of the Gene Ontology (GO) Knowledge Base\n```\n:::\n:::\n\n\n### CRAN packages metadata\n\nIf I need additional details, I can use the function `available.packages()`; downside, it doesn't contain date of publication, but some other metrics which are equally important are returned by this function. So, I ma going to do that below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# using available.packages function\n\navailable_pks <- available.packages(#repos = \"http://cran.us.r-project.org\",\n                                                                            # specify CRAN mirror and metadata to extract\n  repos = \"https://cran.r-project.org/\")[, c(\"Version\",\n                                             \"Depends\",\n                                             \"Repository\",\n                                             \"NeedsCompilation\",\n                                             \"License\")] %>%\n  as.data.frame() %>% tibble::rownames_to_column(var = \"pkg_name\")\n\n# view top n rows\navailable_pks %>% \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        pkg_name Version                                             Depends\n1             A3   1.0.0                      R (>= 2.15.0), xtable, pbapply\n2  AalenJohansen     1.0                                                <NA>\n3       AATtools   0.0.2                                        R (>= 3.6.0)\n4         ABACUS   1.0.0                                        R (>= 3.1.0)\n5    abasequence   0.1.0                                                <NA>\n6     abbreviate     0.1                                                <NA>\n7            abc   2.2.1 R (>= 2.10), abc.data, nnet, quantreg, MASS, locfit\n8       abc.data     1.0                                         R (>= 2.10)\n9        ABC.RAP   0.9.0                                        R (>= 3.1.0)\n10   ABCanalysis   1.2.1                                         R (>= 2.10)\n                               Repository NeedsCompilation    License\n1  https://cran.r-project.org/src/contrib               no GPL (>= 2)\n2  https://cran.r-project.org/src/contrib               no GPL (>= 2)\n3  https://cran.r-project.org/src/contrib               no      GPL-3\n4  https://cran.r-project.org/src/contrib               no      GPL-3\n5  https://cran.r-project.org/src/contrib               no      GPL-3\n6  https://cran.r-project.org/src/contrib               no      GPL-3\n7  https://cran.r-project.org/src/contrib               no GPL (>= 3)\n8  https://cran.r-project.org/src/contrib               no GPL (>= 3)\n9  https://cran.r-project.org/src/contrib               no      GPL-3\n10 https://cran.r-project.org/src/contrib               no      GPL-3\n```\n:::\n:::\n\n\n\n### CRAN packages downloads\n\nWe can grab metric on number of downloads for each package in CRAN from this [website.](https://www.datasciencemeta.com/rpackages)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_down_url <- \"https://www.datasciencemeta.com/rpackages\"\n\npkg_downloads <- read_html(pkg_down_url) %>% \n  html_table() %>% \n  as.data.frame() %>% \n  select(-c(Author, Maintainer)) %>%                          # remove columns with no data\n  mutate(\n    Downloads = str_remove_all(Downloads, pattern = \",\"),     # get rid of commas\n    Downloads = as.integer(Downloads)                         # convert into an integer\n  ) %>% \n  rename(pkg_name = \"Package.Name\", downloads = Downloads)\n\n# view top n rows\npkg_downloads %>% \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Rank pkg_name downloads\n1     1  ggplot2 127088264\n2     2    rlang 118170119\n3     3 magrittr 115906264\n4     4    dplyr  96514386\n5     5    vctrs  84215499\n6     6   tibble  81744821\n7     7      cli  80994837\n8     8 devtools  80226146\n9     9 jsonlite  79806265\n10   10   pillar  76393888\n```\n:::\n:::\n\n\n\nHere is the fun part, we can now join all the three datasets telling different aspects of the packages to have one dataframe we can use for visualization and expropriation, how cool is thatðŸ™‚\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCRAN_pkgs <- reduce(\n  list(r_pkgs_by_date, pkg_downloads, available_pks), # reduce from purrr package\n  left_join,\n  by = \"pkg_name\"                                     # join by package_name\n) %>% arrange(Rank) %>% \n  select(Rank, pkg_name, downloads, everything())\n\n# view top n rows\n\nCRAN_pkgs %>% \n  head(5) %>% \n  reactable::reactable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"reactable html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-4852f58c89c3183ecac6\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-4852f58c89c3183ecac6\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Rank\":[1,2,3,4,5],\"pkg_name\":[\"ggplot2\",\"rlang\",\"magrittr\",\"dplyr\",\"vctrs\"],\"downloads\":[127088264,118170119,115906264,96514386,84215499],\"date_published\":[\"2023-10-12\",\"2023-04-28\",\"2022-03-30\",\"2023-09-03\",\"2023-10-12\"],\"Title\":[\"Create Elegant Data Visualisations Using the Grammar of Graphics\",\"Functions for Base Types and Core R and 'Tidyverse' Features\",\"A Forward-Pipe Operator for R\",\"A Grammar of Data Manipulation\",\"Vector Helpers\"],\"Version\":[\"3.4.4\",\"1.1.1\",\"2.0.3\",\"1.1.3\",\"0.6.4\"],\"Depends\":[\"R (>= 3.3)\",\"R (>= 3.5.0)\",\"R (>= 3.4.0)\",\"R (>= 3.5.0)\",\"R (>= 3.5.0)\"],\"Repository\":[\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\"],\"NeedsCompilation\":[\"no\",\"yes\",\"yes\",\"yes\",\"yes\"],\"License\":[\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\"]},\"columns\":[{\"id\":\"Rank\",\"name\":\"Rank\",\"type\":\"numeric\"},{\"id\":\"pkg_name\",\"name\":\"pkg_name\",\"type\":\"character\"},{\"id\":\"downloads\",\"name\":\"downloads\",\"type\":\"numeric\"},{\"id\":\"date_published\",\"name\":\"date_published\",\"type\":\"Date\"},{\"id\":\"Title\",\"name\":\"Title\",\"type\":\"character\"},{\"id\":\"Version\",\"name\":\"Version\",\"type\":\"character\"},{\"id\":\"Depends\",\"name\":\"Depends\",\"type\":\"character\"},{\"id\":\"Repository\",\"name\":\"Repository\",\"type\":\"character\"},{\"id\":\"NeedsCompilation\",\"name\":\"NeedsCompilation\",\"type\":\"character\"},{\"id\":\"License\",\"name\":\"License\",\"type\":\"character\"}],\"dataKey\":\"78bf2e3e9dbd55091d79de567d7a8911\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\nFor instance, as of the harvesting of this data, what are the top 20 most downloaded packages from CRAN. We can be able to summarize and visualize that information\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCRAN_pkgs %>% \n  filter(Rank <= 20) %>% \n  reactable::reactable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"reactable html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-a41543dc8d17ed6d353a\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a41543dc8d17ed6d353a\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Rank\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"pkg_name\":[\"ggplot2\",\"rlang\",\"magrittr\",\"dplyr\",\"vctrs\",\"tibble\",\"cli\",\"devtools\",\"jsonlite\",\"pillar\",\"Rcpp\",\"glue\",\"lifecycle\",\"stringr\",\"stringi\",\"ragg\",\"textshaping\",\"digest\",\"tidyverse\",\"knitr\"],\"downloads\":[127088264,118170119,115906264,96514386,84215499,81744821,80994837,80226146,79806265,76393888,76161093,73824263,71584623,68447620,65611001,64115392,62983902,61962888,61464580,58384350],\"date_published\":[\"2023-10-12\",\"2023-04-28\",\"2022-03-30\",\"2023-09-03\",\"2023-10-12\",\"2023-03-20\",\"2023-03-23\",\"2022-10-11\",\"2023-06-29\",\"2023-03-22\",\"2023-07-06\",\"2022-02-24\",\"2022-10-07\",\"2022-12-02\",\"2023-01-11\",\"2023-10-10\",\"2023-10-09\",\"2023-07-07\",\"2023-02-22\",\"2023-10-30\"],\"Title\":[\"Create Elegant Data Visualisations Using the Grammar of Graphics\",\"Functions for Base Types and Core R and 'Tidyverse' Features\",\"A Forward-Pipe Operator for R\",\"A Grammar of Data Manipulation\",\"Vector Helpers\",\"Simple Data Frames\",\"Helpers for Developing Command Line Interfaces\",\"Tools to Make Developing R Packages Easier\",\"A Simple and Robust JSON Parser and Generator for R\",\"Coloured Formatting for Columns\",\"Seamless R and C++ Integration\",\"Interpreted String Literals\",\"Manage the Life Cycle of your Package Functions\",\"Simple, Consistent Wrappers for Common String Operations\",\"Fast and Portable Character String Processing Facilities\",\"Graphic Devices Based on AGG\",\"Bindings to the 'HarfBuzz' and 'Fribidi' Libraries for Text\\nShaping\",\"Create Compact Hash Digests of R Objects\",\"Easily Install and Load the 'Tidyverse'\",\"A General-Purpose Package for Dynamic Report Generation in R\"],\"Version\":[\"3.4.4\",\"1.1.1\",\"2.0.3\",\"1.1.3\",\"0.6.4\",\"3.2.1\",\"3.6.1\",\"2.4.5\",\"1.8.7\",\"1.9.0\",\"1.0.11\",\"1.6.2\",\"1.0.3\",\"1.5.0\",\"1.7.12\",\"1.2.6\",\"0.3.7\",\"0.6.33\",\"2.0.0\",\"1.45\"],\"Depends\":[\"R (>= 3.3)\",\"R (>= 3.5.0)\",\"R (>= 3.4.0)\",\"R (>= 3.5.0)\",\"R (>= 3.5.0)\",\"R (>= 3.4.0)\",\"R (>= 3.4)\",\"R (>= 3.0.2), usethis (>= 2.1.6)\",\"methods\",null,null,\"R (>= 3.4)\",\"R (>= 3.4)\",\"R (>= 3.3)\",\"R (>= 3.1)\",null,\"R (>= 3.2.0)\",\"R (>= 3.3.0)\",\"R (>= 3.3)\",\"R (>= 3.3.0)\"],\"Repository\":[\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\",\"https://cran.r-project.org/src/contrib\"],\"NeedsCompilation\":[\"no\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"no\",\"yes\",\"no\",\"yes\",\"yes\",\"no\",\"no\",\"yes\",\"yes\",\"yes\",\"yes\",\"no\",\"no\"],\"License\":[\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"GPL (>= 2)\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"file LICENSE\",\"MIT + file LICENSE\",\"MIT + file LICENSE\",\"GPL (>= 2)\",\"MIT + file LICENSE\",\"GPL\"]},\"columns\":[{\"id\":\"Rank\",\"name\":\"Rank\",\"type\":\"numeric\"},{\"id\":\"pkg_name\",\"name\":\"pkg_name\",\"type\":\"character\"},{\"id\":\"downloads\",\"name\":\"downloads\",\"type\":\"numeric\"},{\"id\":\"date_published\",\"name\":\"date_published\",\"type\":\"Date\"},{\"id\":\"Title\",\"name\":\"Title\",\"type\":\"character\"},{\"id\":\"Version\",\"name\":\"Version\",\"type\":\"character\"},{\"id\":\"Depends\",\"name\":\"Depends\",\"type\":\"character\"},{\"id\":\"Repository\",\"name\":\"Repository\",\"type\":\"character\"},{\"id\":\"NeedsCompilation\",\"name\":\"NeedsCompilation\",\"type\":\"character\"},{\"id\":\"License\",\"name\":\"License\",\"type\":\"character\"}],\"dataKey\":\"d72049164000c3f8f5b19f242a888ae4\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\nMore fun exploration and data wrangling can be performed on the harvested data, feel free to play with the data further.\n\n\nExport the combined dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# export data for playing around with\n\nrio::export(CRAN_pkgs, here(\"datasets\", \"CRAN_pkgs.rds\"))\n```\n:::\n\n\n\n\n# Manually using `readLines()`\n\nSometimes, not all websites are structured in the manner that the dollar exchange website is. What this means is that the magic of the two functions above (`read_html` and `html_tabel`) do not work as expected.\n\nIn such scenarios, I am going to show you a manual way to still harvest data using the `readLines` functions. I must admit that this is a very painful approach and is NOT standard nor reproducible as it depends on the state/structure of the website at the time of harvesting.\n\n\n\n#### **Read the webpage**\n\nThe first step is to read the html code from the website using `readLines` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# store url link\ndollar_ex_url <- \"https://www.theglobaleconomy.com/rankings/Dollar_exchange_rate/\"\n\n# Reading the HTML code from the website\ndollaEx_webpage <- readLines(dollar_ex_url)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in readLines(dollar_ex_url): incomplete final line found on\n'https://www.theglobaleconomy.com/rankings/Dollar_exchange_rate/'\n```\n:::\n\n```{.r .cell-code}\nhead(dollaEx_webpage, 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"<!DOCTYPE htmln [2] \"<html xmlns='https://www.w3.org/1999/xhtml' lang=\\\"en\\\" xml:lang='enn [3] \"\\t<headn [4] \"\\t\\t<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, maximum-scale=1, user-scalablen [5] \"\\t\\tn [6] \"\\t\\t<link rel=\\\"canonical\\\" href=\\\"https://www.theglobaleconomy.com/rankings/Dollar_exchange_raten [7] \"\\t\\tn [8] \"\\t\\t\\t\\t<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utfn [9] \"\\t\\tn[10] \"\\t\\t<link rel=\\\"shortcut icon\\\" href=\\\"/favicon.ico\\\" type=\\\"image/x-iconn[11] \"\\t\\t<link rel=\\\"icon\\\" href=\\\"/favicon.ico\\\" type=\\\"image/x-iconn[12] \"\\t\\tn[13] \"\\t\\t<title>Exchange rate to USD around the world | TheGlobalEconomy.com</titlen[14] \"\\t\\t<meta name=\\\"Keywords\\\" content=\\\"Exchange rate to USD around the worldn[15] \"\\t\\t<meta name=\\\"Description\\\" content=\\\"What do we see on the table: June 2022 update Several countries, including Yemen, Sri Lanka, and Belarus experienced sizable depreciation again the dollar in the last three months. In contrast, the Russian ruble strengthened against the dollar. Over the last three months to May 2022, the dollar appreciated against the euro by about 7 percent, 12 percent against the Japanese yen and about 8 percent against the British pound. In short, the dollar has gained value against all major currencies. It also gained on the Chinese renminbi and the Indian rupee but lost some ground to the Brazilian real. What factors determine the exchange rates The exchange rate is the price of one currency expressed in units of another currency. We say that a currency is appreciating/depreciating relative to another currency if â€¦ continue reading below the table \\\" />\"\n```\n:::\n:::\n\n\nThe `dollaEx_webpage` is basically a HTML page with all the usual html tags and stuff. So, we are going refer to the website for a start point to give us reference for first entry and last entry of the page. From experience, I have found focusing on the actual data saves time and very easy to proceed forth as opposed to randomly picking any entry on the page.\n\nFor instance, Afghanistan is the first entry on the table and Zambia is the last entry, this gives me an idea of the bound of the data that I want. Ideally I need everything between entry one and last entry and I am going to show you how.\n\n\n#### **Search for data bounds**\n\nNow, the manual work starts here. From the source website, I want to find the index or indices of `Afghanistan`, my first data point.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_which(dollaEx_webpage, \"Afghanistan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 922\n```\n:::\n:::\n\n\nWhat this means is that the key word Afghanistan has been found in position 922 (sometimes multiple positions get returned). We can try to triangulate around these positions and see what weâ€™ve got going. There is not rule for triangulation, you just throw the net and inspect the output, thatâ€™s why itâ€™s a manual approach.\n\nFrom the `dollaEx_webpage` object and with the index of my first data point, I start the triangulation process. For instance, let me view the next 10 lines after position `922`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndollaEx_webpage[922:932] # first 10 lines\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"\\t\\t\\t\\t\\t\\t<td><a href='/Afghanistan/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Afghanistan</a></td>\"\n [2] \"\\t\\t\\t\\t\\t\\t<td>75.4778</td>\"                                                                           \n [3] \"\\t\\t\\t\\t\\t\\t<td>Oct / 2023</td>\"                                                                        \n [4] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>-13.35%</td>\"                                                               \n [5] \"\\t\\t\\t\\t\\t\\t<td>-13.07%</td>\"                                                                           \n [6] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\"                                                                            \n [7] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\"                                                                                 \n [8] \"\\t\\t\\t\\t\\t\\t<td><a href='/Albania/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Albania</a></td>\"        \n [9] \"\\t\\t\\t\\t\\t\\t<td>100.1403</td>\"                                                                          \n[10] \"\\t\\t\\t\\t\\t\\t<td>Oct / 2023</td>\"                                                                        \n[11] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>6.77%</td>\"                                                                 \n```\n:::\n:::\n\n\nClearly from the above output, if I were interested in data for `Afghanistan` only, i.e. the 5 columns from the table in the website, they are contained between positions 922 and 926, see below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndollaEx_webpage[922:926] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"\\t\\t\\t\\t\\t\\t<td><a href='/Afghanistan/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Afghanistan</a></td>\"\n[2] \"\\t\\t\\t\\t\\t\\t<td>75.4778</td>\"                                                                           \n[3] \"\\t\\t\\t\\t\\t\\t<td>Oct / 2023</td>\"                                                                        \n[4] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>-13.35%</td>\"                                                               \n[5] \"\\t\\t\\t\\t\\t\\t<td>-13.07%</td>\"                                                                           \n```\n:::\n:::\n\n\n**NOTE**, I am ONLY interested at the start and end of the data string containing the columns a.ka. data that I need. Do the same for the last entry on the table (in the website), which in this case is `Zambia.` \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Last entry\nstr_which(dollaEx_webpage, \"Zambia\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2252\n```\n:::\n:::\n\n\nNOTE, I am interested at the start and end of the data string. The index for Zambia is 2252, based on what I did with the first entry on the table, it simply means that the data bound for Zambia is contained within 4 steps/lines from 2252. See below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndollaEx_webpage[2252:2256]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"\\t\\t\\t\\t\\t\\t<td><a href='/Zambia/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Zambia</a></td>\"\n[2] \"\\t\\t\\t\\t\\t\\t<td>21.5142</td>\"                                                                 \n[3] \"\\t\\t\\t\\t\\t\\t<td>Oct / 2023</td>\"                                                              \n[4] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>16.24%</td>\"                                                      \n[5] \"\\t\\t\\t\\t\\t\\t<td>35.05%</td>\"                                                                  \n```\n:::\n:::\n\n\nAfter carefully inspecting the above outputs, I can conclude that the data I am looking for (the whole table) lies between 922 to 2256. Anything before or after contain nothing other than \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\" tags only.\n\n\n#### **Define whole data bounds**\n\nAfter arriving at this conclusion, then next step is to now narrow your webpage to the data bounds only i.e.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# resize your webpage to only contain the data\ndollaEx_webData <- dollaEx_webpage[922:2256]\n\nhead(dollaEx_webData, 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"\\t\\t\\t\\t\\t\\t<td><a href='/Afghanistan/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Afghanistan</a></td>\"\n [2] \"\\t\\t\\t\\t\\t\\t<td>75.4778</td>\"                                                                           \n [3] \"\\t\\t\\t\\t\\t\\t<td>Oct / 2023</td>\"                                                                        \n [4] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>-13.35%</td>\"                                                               \n [5] \"\\t\\t\\t\\t\\t\\t<td>-13.07%</td>\"                                                                           \n [6] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\"                                                                            \n [7] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\"                                                                                 \n [8] \"\\t\\t\\t\\t\\t\\t<td><a href='/Albania/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Albania</a></td>\"        \n [9] \"\\t\\t\\t\\t\\t\\t<td>100.1403</td>\"                                                                          \n[10] \"\\t\\t\\t\\t\\t\\t<td>Oct / 2023</td>\"                                                                        \n[11] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>6.77%</td>\"                                                                 \n[12] \"\\t\\t\\t\\t\\t\\t<td>-15.96%</td>\"                                                                           \n[13] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\"                                                                            \n[14] \"\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\"                                                                                 \n[15] \"\\t\\t\\t\\t\\t\\t<td><a href='/Algeria/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Algeria</a></td>\"        \n```\n:::\n:::\n\n\nIf you widely look at the object `dollaEx_webData`, it contains a lot of unnecessary \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\" tags, so now itâ€™s time to clean this object carefully ind order to obtain the data.\n\n\n#### **Cleanup process**\n\nFirst get rid of all the `\"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\"`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# remove ALL the \"\\t\"\ndollaEx_clean <- dollaEx_webData %>% str_remove_all(pattern = \"\\t\")\n\nhead(dollaEx_clean,25)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"<td><a href='/Afghanistan/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Afghanistan</a></td>\"\n [2] \"<td>75.4778</td>\"                                                                           \n [3] \"<td>Oct / 2023</td>\"                                                                        \n [4] \"<td>-13.35%</td>\"                                                                           \n [5] \"<td>-13.07%</td>\"                                                                           \n [6] \"</tr>\"                                                                                      \n [7] \"<tr>\"                                                                                       \n [8] \"<td><a href='/Albania/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Albania</a></td>\"        \n [9] \"<td>100.1403</td>\"                                                                          \n[10] \"<td>Oct / 2023</td>\"                                                                        \n[11] \"<td>6.77%</td>\"                                                                             \n[12] \"<td>-15.96%</td>\"                                                                           \n[13] \"</tr>\"                                                                                      \n[14] \"<tr>\"                                                                                       \n[15] \"<td><a href='/Algeria/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Algeria</a></td>\"        \n[16] \"<td>137.2571</td>\"                                                                          \n[17] \"<td>Oct / 2023</td>\"                                                                        \n[18] \"<td>1.59%</td>\"                                                                             \n[19] \"<td>-2.22%</td>\"                                                                            \n[20] \"</tr>\"                                                                                      \n[21] \"<tr>\"                                                                                       \n[22] \"<td><a href='/Andorra/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Andorra</a></td>\"        \n[23] \"<td>0.9466</td>\"                                                                            \n[24] \"<td>Oct / 2023</td>\"                                                                        \n[25] \"<td>4.67%</td>\"                                                                             \n```\n:::\n:::\n\n\nThe object `dollaEx_webData` basically contains unique strings that contain data from the column of the table in the `url.` If you look closely, you will see a recurring pattern of strings, each starting with `\"\"<td><a href='/\" `and ending with a double `\"</tr>\"`; and ideally, this is the trick. The ability to understand the output and content of `dollaEx_clean.`\n\nIf you then count these start and end of recurring patterns, you find that they are 7 in number, so a single country data is composed of 7 unique strings Try viewing the first 25 rows of `dollaEx_clean`, you will be able to see what I mean.\n\nTake these unique strings and turn them into a matrix with each column containing the vital pieces of information and drop what is NOT required.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndollaEx_matrix <- matrix(dollaEx_clean, \n                         ncol = 7, # 7 columns because there were 7 unique strings\n                         byrow = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in matrix(dollaEx_clean, ncol = 7, byrow = TRUE): data length [1335] is\nnot a sub-multiple or multiple of the number of rows [191]\n```\n:::\n\n```{.r .cell-code}\nhead(dollaEx_matrix, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1]                                                                                         \n[1,] \"<td><a href='/Afghanistan/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Afghanistan</a></td>\"\n[2,] \"<td><a href='/Albania/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Albania</a></td>\"        \n[3,] \"<td><a href='/Algeria/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Algeria</a></td>\"        \n[4,] \"<td><a href='/Andorra/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Andorra</a></td>\"        \n     [,2]                [,3]                  [,4]              \n[1,] \"<td>75.4778</td>\"  \"<td>Oct / 2023</td>\" \"<td>-13.35%</td>\"\n[2,] \"<td>100.1403</td>\" \"<td>Oct / 2023</td>\" \"<td>6.77%</td>\"  \n[3,] \"<td>137.2571</td>\" \"<td>Oct / 2023</td>\" \"<td>1.59%</td>\"  \n[4,] \"<td>0.9466</td>\"   \"<td>Oct / 2023</td>\" \"<td>4.67%</td>\"  \n     [,5]               [,6]    [,7]  \n[1,] \"<td>-13.07%</td>\" \"</tr>\" \"<tr>\"\n[2,] \"<td>-15.96%</td>\" \"</tr>\" \"<tr>\"\n[3,] \"<td>-2.22%</td>\"  \"</tr>\" \"<tr>\"\n[4,] \"<td>-6.90%</td>\"  \"</tr>\" \"<tr>\"\n```\n:::\n:::\n\n\nThe matrix contains 7 columns (7 uniques strings, remember?). Information that we are most interested in (i.e the columns of the table in the url) are contained in the following columns of the matrix.\n\n  - column 1 contains country\n  - column 3 contains latest data from\n  - column 2 contains latest value\n  - column 4 contains change 3 months\n  - column 5 contains change 12 months\n\nWith this information, we can now construct the final clean matrix by droping column 6 and 7 which contains nothing we are interested in.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# drop columns that don't contain information of interest\ndollaEx_matrix_clean <- dollaEx_matrix[, c(1, 2, 3, 4, 5)]\n\nhead(dollaEx_matrix_clean, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1]                                                                                         \n[1,] \"<td><a href='/Afghanistan/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Afghanistan</a></td>\"\n[2,] \"<td><a href='/Albania/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Albania</a></td>\"        \n[3,] \"<td><a href='/Algeria/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Algeria</a></td>\"        \n[4,] \"<td><a href='/Andorra/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Andorra</a></td>\"        \n[5,] \"<td><a href='/Angola/Dollar_exchange_rate/' style=\\\"color:#000;\\\">Angola</a></td>\"          \n     [,2]                [,3]                  [,4]              \n[1,] \"<td>75.4778</td>\"  \"<td>Oct / 2023</td>\" \"<td>-13.35%</td>\"\n[2,] \"<td>100.1403</td>\" \"<td>Oct / 2023</td>\" \"<td>6.77%</td>\"  \n[3,] \"<td>137.2571</td>\" \"<td>Oct / 2023</td>\" \"<td>1.59%</td>\"  \n[4,] \"<td>0.9466</td>\"   \"<td>Oct / 2023</td>\" \"<td>4.67%</td>\"  \n[5,] \"<td>828.1470</td>\" \"<td>Oct / 2023</td>\" \"<td>0.28%</td>\"  \n     [,5]              \n[1,] \"<td>-13.07%</td>\"\n[2,] \"<td>-15.96%</td>\"\n[3,] \"<td>-2.22%</td>\" \n[4,] \"<td>-6.90%</td>\" \n[5,] \"<td>83.55%</td>\" \n```\n:::\n:::\n\n\n\nNow construct a tibble from the above matrix and this will be our final product of the table from the url\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# final table\nexchange_data <- tibble(\n      Country = dollaEx_matrix_clean[, 1],\n      LatestData = dollaEx_matrix_clean[, 3],\n      LatesValue = dollaEx_matrix_clean[, 2],\n      Change3months = dollaEx_matrix_clean[ ,4],\n      Change12months = dollaEx_matrix_clean[ ,5]\n    )\n\nhead(exchange_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 5\n  Country                     LatestData LatesValue Change3months Change12months\n  <chr>                       <chr>      <chr>      <chr>         <chr>         \n1 \"<td><a href='/Afghanistanâ€¦ <td>Oct /â€¦ <td>75.47â€¦ <td>-13.35%<â€¦ <td>-13.07%</â€¦\n2 \"<td><a href='/Albania/Dolâ€¦ <td>Oct /â€¦ <td>100.1â€¦ <td>6.77%</tâ€¦ <td>-15.96%</â€¦\n3 \"<td><a href='/Algeria/Dolâ€¦ <td>Oct /â€¦ <td>137.2â€¦ <td>1.59%</tâ€¦ <td>-2.22%</tâ€¦\n4 \"<td><a href='/Andorra/Dolâ€¦ <td>Oct /â€¦ <td>0.946â€¦ <td>4.67%</tâ€¦ <td>-6.90%</tâ€¦\n5 \"<td><a href='/Angola/Dollâ€¦ <td>Oct /â€¦ <td>828.1â€¦ <td>0.28%</tâ€¦ <td>83.55%</tâ€¦\n6 \"<td><a href='/Antigua-andâ€¦ <td>Oct /â€¦ <td>2.702â€¦ <td>0.00%</tâ€¦ <td>0.00%</td>\n```\n:::\n:::\n\n\n\nFurther clean up process for the columns (They don't contain usable date yet), so many html tags that needs to be removed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexchange_data <- exchange_data %>% \n  mutate(\n    Country = str_remove(Country, pattern = \"/Dollar_exchange_rate/.*\"), # remove all characters after \"/Dollar_exchange_rate/\"\n    Country = str_remove(Country, pattern = \"<td><a href='/\")            # remove the start tag for each value of country\n  )\n\nhead(exchange_data, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 Ã— 5\n  Country     LatestData          LatesValue        Change3months Change12months\n  <chr>       <chr>               <chr>             <chr>         <chr>         \n1 Afghanistan <td>Oct / 2023</td> <td>75.4778</td>  <td>-13.35%<â€¦ <td>-13.07%</â€¦\n2 Albania     <td>Oct / 2023</td> <td>100.1403</td> <td>6.77%</tâ€¦ <td>-15.96%</â€¦\n3 Algeria     <td>Oct / 2023</td> <td>137.2571</td> <td>1.59%</tâ€¦ <td>-2.22%</tâ€¦\n4 Andorra     <td>Oct / 2023</td> <td>0.9466</td>   <td>4.67%</tâ€¦ <td>-6.90%</tâ€¦\n5 Angola      <td>Oct / 2023</td> <td>828.1470</td> <td>0.28%</tâ€¦ <td>83.55%</tâ€¦\n```\n:::\n:::\n\n\n\nThe rest contain almost similar pattern, we are going to clean all them at a go. Basically remove the patterns/tags `<td>` and `</td>` from our columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexchange_data <- exchange_data %>% \n  mutate(across(.cols = c(LatestData:Change12months),\n                .fns = ~ str_remove_all(., pattern = \"<td>|</td>\")    # remove the patterns \"<td>|</td>\"\n                  )) %>%\n  mutate(across(LatesValue, as.numeric),                              # convert to numeric column containing exchange rate\n         \n         # On the date column; remove white space and replace \"/\" with \"-\"\n         LatestData = str_squish(\n           str_replace_all(\n             string = LatestData,\n             pattern = \"/\",\n             replacement = \"-\"\n           )\n         )) %>% \n  # transform `LatestData` into a proper date column\n  mutate(\n    LatestData = my(LatestData),                       # proper date format\n    LatestData = format(LatestData, \"%Y-%m\")           # YYYY-mm\n  )\n\nexchange_data %>% \n  tail(6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 5\n  Country    LatestData LatesValue Change3months Change12months\n  <chr>      <chr>           <dbl> <chr>         <chr>         \n1 Uruguay    2023-10          39.6 4.72%         -3.58%        \n2 Uzbekistan 2023-10       12215.  5.52%         9.95%         \n3 Vanuatu    2018-06         109.  -0.00%        -0.63%        \n4 Vietnam    2023-10       24485.  3.46%         0.63%         \n5 Yemen      2023-10        1239   0.00%         0.00%         \n6 Zambia     2023-10          21.5 16.24%        35.05%        \n```\n:::\n:::\n\n\n\n**NOTE**: The downside of this manual approach is that it always depends on the website not changing structure, for instance if we had other countries added after Zambia, then our code above would not be able to extract that extra data sadly.\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\r\n<script src=\"../../site_libs/react-17.0.0/react.min.js\"></script>\r\n<script src=\"../../site_libs/react-17.0.0/react-dom.min.js\"></script>\r\n<script src=\"../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\r\n<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/reactable-0.4.4/reactable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/reactable-binding-0.4.4/reactable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}